/*****************************************************************************
* Model: co2013.qm
* File:  generated/globals.h
*
* This code has been generated by QM tool (see state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*****************************************************************************/
/*${generated::globals.h} ..................................................*/
#ifndef GLOBALS_H_
#define GLOBALS_H_

#include "qp_port.h"

#define DIMENSION_TO_SUPPORT_THE_DISPLAY            (2U)
#define MAX_BSSID_SIZE                              (20)
#define MAX_SSID_SIZE                               (32)
#define FREQ_50HZ_TIMER                             (7660) /* Between 50Hz(100Hz) (8353d) and 60Hz(120Hz) (6967d) */

enum Priorities {
  PRIO_AO_LOWEST = 1,        /* lowest priority */
  PRIO_AO_SW_UPGRADE,        /* 2 */
  PRIO_AO_VIRT_KEY,          /* 3 */
  PRIO_AO_MODELING_LIGHT,    /* 4 */
  PRIO_AO_GAINSPAN_SPI,      /* 5 */
  PRIO_AO_WLAN_MOD_DRV,      /* 6 */
  PRIO_AO_AT_CMD,            /* 7 */
  PRIO_AO_DISCOVERY,         /* 8 */
  PRIO_AO_THERMO,            /* 9 */
  PRIO_AO_ENERGY_MGR,        /* 10*/
  PRIO_AO_LED_MENU,          /* 11 */
  PRIO_AO_VIRT_CONTROL_KNOB, /* 12 */
  PRIO_AO_LED_DRIVER,        /* 13 */
  PRIO_AO_RFS2_DRIVER,       /* 14 */
#ifdef BRONCOM
  PRIO_AO_USCIA1_DRIVER,     /* 15 */
#endif
  PRIO_AO_USCIA2_DRIVER,     /* 16 */
  PRIO_AO_SPIB1_DRIVER,      /* 17 */
  PRIO_AO_SPIA2_DRIVER,      /* 18 */
  PRIO_AO_SPIB2_DRIVER,      /* 19 */
  PRIO_AO_BUZZER,            /* 20 */
  PRIO_AO_PHYS_KEY,          /* 21 */
  PRIO_AO_ADC_DRIVER,        /* 22 */
  PRIO_AO_PARAM            , /* 23 */
  PRIO_AO_CHARGECONTROLLER,  /* 24 */
  PRIO_AO_IGNITION,          /* 25 */
  MAX_PRIO                   /* highest priority */
};


enum Signals {

  /*         PHYSIQUE KEYS         */

  /** 1. published by PhysKey and subscribed by VirtKey. */
  PHYS_KEY_TEST_PRESSED_SIG = Q_USER_SIG,
  /** 2. published by PhysKey and subscribed by VirtKey. */
  PHYS_KEY_TEST_RELEASED_SIG,
  /** 3. published by PhysKey and subscribed by VirtKey. */
  PHYS_KEY_MOD_PRESSED_SIG,
  /** 4. published by PhysKey and subscribed by VirtKey. */
  PHYS_KEY_MOD_RELEASED_SIG,
  /** 5. published by BSP_Timer-->TIMER1_A0_VECTOR  and subscribed by LEDMenu. */
  PHYS_CONTROLKNOB_CW_SIG,
  /** 6. published by BSP_Timer-->TIMER1_A0_VECTOR  and subscribed by LEDMenu. */
  PHYS_CONTROLKNOB_ACW_SIG,
  /** 7. published by BSP_Timer-->TIMER1_A0_VECTOR  and subscribed by LEDMenu. */
  PHYS_CONTROLKNOB_CW_FAST_SIG,
  /** 8. published by BSP_Timer-->TIMER1_A0_VECTOR  and subscribed by LEDMenu. */
  PHYS_CONTROLKNOB_ACW_FAST_SIG,
  /** 9. published by PhysKey and subscribed by VirtKey. */
  PHYS_KEY_CONTROLKNOB_PRESSED_SIG,
  /** 10. published by PhysKey and subscribed by VirtKey. */
  PHYS_KEY_CONTROLKNOB_RELEASED_SIG,
  /** 11. published by PhysKey and subscribed by VirtKey. */
  PHYS_KEY_CONTROLKNOB_DOUBLE_TOUCH_SIG,
  /*         VIRTUAL KEYS         */

  /** 100. published by VirtKey and subscribed by ModelingLight. */
  VIRT_KEY_MOD_SIG,
  /** 101. published by VirtKey. */
  VIRT_KEY_MOD_LONG_SIG,
  /** 102. published by VirtKey and subscribed by Ignition. */
  VIRT_KEY_TEST_SIG,
  /** 103. published by VirtKey. */
  VIRT_KEY_TEST_LONG_SIG,
  /** 104. published by VirtKey and subscribed by Ignition. */
  VIRT_KEY_ENTER_SIG,
  /** 105. published by VirtKey. */
  VIRT_KEY_ENTER_LONG_SIG,
  /** 106. published by VirtKey. */
  VIRT_KEY_BIG_SEQUENCE_MODE_SIG,

  /* 18 */

  /*         WLAN         */
  /** 110. published by MW_Inte. */
  SIROS_IN_STANDBY_SIG,
  /** 111. published by MW_Inte. */
  COGNITION_LIGHT_ACTIVATE_SIG,
  /** 112. published by MW_Inte. */
  WLAN_TEST_SIG,
  /** 113. published by MW_Inte. */
  SIROS_NO_MORE_IN_STANDBY_SIG,


  /*         CONTROL KNOB         */

  /** 120. published by VirtControlKnob and subscribed by LEDMenu. */
  MORE_ONE_SIG,
  /** 121. published by VirtControlKnob and subscribed by LEDMenu. */
  LESS_ONE_SIG,
  /** 122. published by VirtControlKnob and subscribed by LEDMenu. */
  MORE_TEN_SIG,
  /** 123. published by VirtControlKnob and subscribed by LEDMenu. */
  LESS_TEN_SIG,

  /*         RFS2          */
  /** 140. published by Rfs2_Driver and subscribed by EnergyMgr. */
  RFS_KEY_UP_SIG,
  /** 141. published by Rfs2_Driver and subscribed by EnergyMgr. */
  RFS_KEY_DOWN_SIG,
  /** 142. published by Rfs2_Driver and subscribed by EnergyMgr. */
  RFS_KEY_UP_LONG_SIG,
  /** 143. published by Rfs2_Driver and subscribed by EnergyMgr. */
  RFS_KEY_DOWN_LONG_SIG,

  /* 30 */

  /*         USCI          */
  USCIA1_RX_DONE_SIG,
#ifdef BRONCOM
  USCIA1_TX_READY_SIG,
  USCIA1_SEND_SIG,
#endif
  /** published by BSP and subscribed by SCI_Driver. */
  USCIA2_TX_READY_SIG,
  /** published by BSP and subscribed by Accu_driver. Event type is RxDataEvt. */
  USCIA2_RX_DONE_SIG,
  /** published by Accu_driver and subscribed by SCI_Driver. Event type is RxDataEvt. */
  USCIA2_SEND_SIG,
  /** published by SCI_Driver. */
  USCIA2_ERROR_SIG,

  /*         ADC         */
  /** 160. published by LampDetect and subscribed by ADC_driver. Event type is AdcConversionEvt. */
  ADC_START_SIG,

  /*         FREQ         */
  /** 170. published by LampDetect and subscribed by ADC_driver. Event type is AdcConversionEvt. */
  FREQ_RESULT_SIG,

  /*         BUZZER       */
  /** 180. subscribed by Buzzer. Event type is BuzzerEvt. */
  BUZZER_SIG,
  /** 181. subscribed by Buzzer. Event type is BuzzerEvt. */
  BUZZER_ABORT_SIG,
  /** 182. published by Buzzer. */
  BUZZER_DONE_SIG,

  /* 39 */

  /*         EVENTS        */
  /** 200. published by PowerManagement and subscribed by Accu_driver, ADC_Driver, EnergyMgr, Ignition, LampDetect,          LCD_Driver,     LCDMenu, LEDMenu, ModelingLight, PhysKey, StartRegelkreis. */
  INIT_DONE_SIG,
  /** 202. published by LEDMenu, LCDMenu, LED_Driver and subscribed by LED_driver. Event type is LEDModifyEvt. */
  LED_MODIFY_SIG,
  /** 203. published by LEDMenu, LCDMenu, LED_Driver and subscribed by LED_driver. */
  LED_UPDATE_SIG,
  /** 204. published by BSP and subscribed by SPI_Driver, LED_Driver. */
  SPIB0_DONE_SIG,
  /** 205. published by LED_Driver and subscribed by SPI_Driver. Event type is RxDataEvt. */
  SPIB0_SEND_SIG,
  /** 206. published by bsp_spi.c */
  SPIB1_DONE_SIG,
  /** 207. published by ... */
  SPIB1_SEND_SIG,
  /** 208. published by bsp_spi.c  */
  DATA_FROM_HOST_TO_MODULE_SIG,
  /** 209. published by ... */
  SPIB2_DONE_SIG,
  /** 210. published by LED_Driver and subscribed by SPI_Driver. Event type is RxDataEvt. */
  SPIB2_SEND_SIG,
  /** 211. published by BSP and not subscribed for the moment */
  LOSE_SIG,
  /** 212. published by EnergyMgr and subscribed by Ignition. */
  IGNITION_ABORT_SIG,
  /** 213. posted to active object which sent a ADC_START_SIG to the ADC_Driver. Event type is AdcConversionEvt. */
  ADC_RESULT_SIG,
  /** 214. published by BSP and subscribed by ADC_Driver. */
  ADCINT_DONE_SIG,
  /** 215. posted to StartRegelkreis by BSP. Event type is AdcConversionEvt. */
  LOAD_U_ADC_RESULT_SIG,
  /** 217. published by BSP and subscribed by Ignition. */
  FLASH_DONE_SIG,
  /** 218. published by BSP and used locally in several active objects */
  TIMER1_A0_SIG,
  /** 219. published by BSP and subscribed by ChargeController. */
  ZERO_VOLTAGE_PASSAGE_SIG,
  /** 221. published by ...  */
  SPIA2_SEND_SIG,
  /** 222. published by bsp_usci.c  */
  DATA_FROM_MODULE_TO_HOST_SIG,
  /** 223. published by EnergyMgr  */
  NEW_LOAD_SIG,
  /** 224. published by EnergyMgr  */
  POWER_OFF_SIG,
  /** 225. published by EnergyMgr  */
  POWER_OFF_ACCU_DEFAULT_SIG,
  /** 226. published by BSP and subscribed by Ignition. */
  REARM_AFTER_FREEMASKALTERNATE_SIG,


  /* 62 */

  /*         PARAMETERS         */
  /** 300. published by LEDMenu and subscribed by LEDMenu. */
  PARAM_CHANGED_MODELING_MODE_SIG,
  /** 301. published by subscribed by LCDMenu. */
  PARAM_CHANGED_THERMO_TIME_SIG,
  /** 302. published by EnergyMgr and subscribed by LEDMenu. */
  PARAM_CHANGED_ENRGY_A_SIG,
  /** 303. published by EnergyMgr and subscribed by LEDMenu. */
  PARAM_CHANGED_ENRGY_J_SIG,
  /** 304. published by Ignition & StartRegelkreis and subscribed by LCDMenu. */
  PARAM_CHANGED_ALARM_SIG,
  /** 305.published by LEDMenu and subscribed by LEDMenu. */
  PARAM_CHANGED_MOD_LIGHT_ENA_SIG,
  /** 306.published by Param and subscribed by ... */
  PARAM_CHANGED_IS_800J_SIG,
  /** 307.published by Param and subscribed by ... */
  PARAM_CHANGED_IS_230V_SIG,
  /** 308.published by Param and subscribed by ... */
  PARAM_CHANGED_IS_50HZ_SIG,
  /** 309.published by Param and subscribed by ... */
  PARAM_CHANGED_IS_CUTOFF_SIG,
  /** 310.published by Chargecontroller and subscribed by Ignition... */
  PARAM_CHANGED_LOAD_VOLTAGE_REACHED_SIG,
  /** 311.published by Chargecontroller and subscribed by Ignition... */
  PARAM_CHANGED_LOAD_VOLTAGE_REACHED_REDUCED_SIG,
  /** 312.published by StartRegelkreis and subscribed by LEDMenu. */
  PARAM_CHANGED_LOAD_VOLTAGE_TOO_HIGH_SIG,
  /** 313.published by energy_mgr_private and subscribed by ... */
  PARAM_CHANGED_VOLTAGE_FROM_APERTURE_SIG,
  /** 314.published by LEDMenu and subscribed by ... */
  PARAM_CHANGED_SPEED_MODE_SIG,
  /** 315.published by EnergyMgr and subscribed by Ignition. */
  PARAM_CHANGED_AUSGABE_CALC_SIG,
  /** 316.subscribed by Ignition, EnergyMgr. */
  PARAM_CHANGED_IGNITIONTIME_FROM_APERTURE_SIG,
  /** 317.published by LEDMenu and subscribed by ... */
  PARAM_CHANGED_ECO_MODE_SIG,
  /** 318.published by LEDMenu and subscribed by ... */
  PARAM_CHANGED_STUDIO_ADDR_SIG,
  /** 319.published by LEDMenu and subscribed by ... */
  PARAM_CHANGED_SEQUENCE_SIG,
  /** 320.published by LEDMenu and subscribed by ... */
  PARAM_CHANGED_SYNC_MODE_SIG,
  /** 321.published by LEDMenu and subscribed by ... */
  PARAM_CHANGED_AUDIO_READY_SIG,
  /** 322.published by LEDMenu and subscribed by ... */
  PARAM_CHANGED_LAMP_ADDR_SIG,
  /** 323.published by LEDMenu and subscribed by ... */
  PARAM_CHANGED_WIFI_MODE_SIG,
  /** 324.published by LEDMenu and subscribed by ... */
  PARAM_CHANGED_IS_STANDBY_SIG,
  /** 324.published by Ignition and subscribed by ... */
  PARAM_CHANGED_IGNITION_READY_SIG,
  /** 325.published by PowerManagement and subscribed by ... */
  PARAM_CHANGED_TWELVE_VOLTAGE_LESS_THAN_LOW_LIMIT_SIG,
  /** 326. published by LEDMenu and subscribed by ... */
  PARAM_CHANGED_CELL_BLINKED_SIG,
  /** 327. published by LEDMenu and subscribed by ... */
  PARAM_CHANGED_IS_SIROS_IN_MENU_SIG,
  /** 328. published by Param and subscribed by ... */
  PARAM_CHANGED_RF_MODE_SIG,
  /** 329.published by LEDMenu and subscribed by ... */
  PARAM_CHANGED_HS_MODE_SIG,
  /** 329.published by Thermo and subscribed by ... */
  PARAM_CHANGED_IS_SIROS_IN_TH_STANDBYE_SIG,
  /** 330.published by Thermo and subscribed by ... */
  PARAM_CHANGED_IS_MODELIMG_L_IN_MINI_MODE_SIG,
  /** 331.published by Thermo and subscribed by ... */
  PARAM_CHANGED_IGNITION_PAUSE_FROM_THERMO_SIG,
  /** 332.published by Thermo and subscribed by ... */
  PARAM_CHANGED_IS_SIROS_IN_TH_IGN_PAUSE_SIG,
  /** 333. published by PowerManagement and subscribed by Param. */
  PARAM_STORE_SIG,
  /** 334. published by BSP_gpio and subscribed by ... */
  PARAM_CHANGED_GAINSPAN_AVAILABLE_SIG,
  /** 335. published by Chargecontroller and subscribed by Igntion */
  PARAM_CHANGED_UBPLUS_VALUES_SIG,
  /** 336. published by LEDMenu and subscribed by ... */
  PARAM_CHANGED_COGNITION_LIGHT_COLOR_SIG,
  /** 337. published by WLAN and subscribed by ... */
  PARAM_CHANGED_COGNITION_LIGHT_ACTIVATE_SIG,
  /** 338. published by WLAN and subscribed by ... */
  PARAM_CHANGED_WLAN_LOGIN_SSID_SIG,
  /** 339. published by WLAN and subscribed by ... */
  PARAM_CHANGED_WLAN_LOGIN_PWD_SIG,
  /** 340. published by WLAN and subscribed by ... */
  PARAM_CHANGED_JOIN_NETWORK_SIG,
  /** 341.  published by  WLAN and subscribed by ...*/
  PARAM_CHANGED_COGNITION_LIGHT_ENABLE_SIG,
  /** 342.  published by  Param and subscribed by ...*/
  PARAM_CHANGED_GAINSPAN_DETECTED_SIG,
  /** 343.  published by  WLAN mod drv and subscribed by ...*/
  PARAM_CHANGED_GAINSPAN_COMMUNICATION_AVAILABLE_SIG,
  /** 344.  published by  LedMenu and subscribed by ...*/
  PARAM_CHANGED_IS_FLASH_READY_SIG,
  /** 345.  published by  Param and subscribed by ...*/
  PARAM_CHANGED_MENU_CONFIGURATION_SIG,
  /** 346.  published by  Param and subscribed by ...*/
  PARAM_CHANGED_FIRST_MENU_DOT_SIG,
  /** 347.  published by  Middelware integration and subscribed by ...*/
  PARAM_CHANGED_WLAN_LOGIN_ENC_TYPE_SIG,
  /** 348.  published by  energy_mgr_private integration and subscribed by ...*/
  PARAM_CHANGED_FLASH_DURATION_SIG,
  /** 349.  published by Discovery */
  PARAM_CHANGED_INFRASTRUCTURE_MODE_SIG,
  /** 350.  published by LEDMenu and subscribed by ...*/
  PARAM_CHANGED_IS_MANUAL_SLOW_CHARGE_SIG,
  /** 351.  published by standby and subscribed by ...*/
  PARAM_CHANGED_STB_PHASE_SIG,
  /** 352.  published by Thermo and subscribed by ...*/
  PARAM_CHANGED_IS_THERMO_SLOW_CHARGE_SIG,
  /** 353.  published by Middleware integration */
  PARAM_CHANGED_DELAY_TIME_SIG,
  /** 354.  published by Middleware integration */
  PARAM_CHANGED_FREEMASKALTERNATE_SIG,
  /** 355.  published by Middleware integration */
  PARAM_CHANGED_MASKGROUP_SIG,
  /** 356.  published by Middleware integration */
  PARAM_CHANGED_SS_PAUSE_TIME_SIG,
  /** 357.  published by Middleware integration */
  PARAM_CHANGED_SYNCRONIZED_SEQUENCE_SIG,
  /** 358.  published by Middleware integration */
  PARAM_CHANGED_SYNC_MODE_BEFORE_SS_SIG,

  /* 112 */

//  TERMINATE_SIG,
  ENABLE_WLAN_SIG,
  DISABLE_WLAN_SIG,
  GAINSPAN_RESET_DETECTED_SIG,
  GAINSPAN_ASSERT_SIG,
  PREFERRED_AP_CHANGED_SIG,
  LINK_LOST_SIG,
  GAINSPAN_RX_SIG,
  GAINSPAN_TX_SIG,
  UDP_RX_SIG,
  UDP_TX_SIG,
  UDP_TX_OK_SIG,
  UDP_TX_FAIL_SIG,
  AT_RESPONSE_SIG,
  CONNECTED_SIG,
  CONNECT_FAILED_SIG,
  SCAN_RESPONSE_SIG,
  WLAN_READY_SIG,
  INIT_WLAN_DONE_SIG,
  WLAN_PLUGGED_SIG,
  RANDOM_FEED_SIG,

  /* 131 */

  /** 333. The last published signal. Needed by QEP Framework. */
  MAX_PUB_SIG,

  /*         POST EVENT     */

  /** 350. published by BSP and subscribed by Ignition. */
  SYNC_SIG,
  /** 351. published by BSP and subscribed by Ignition. */
  CELL_SIG,
  /** 352. published by BSP and subscribed by Ignition. */
  RFS2_SIG,

  /* 135 */

  /*         TIMERS         */

  /* 400. Posted event used locally in several active objects */
  LOCAL_TIMER_SIG,
  /** 401. Posted event used locally in several active objects */
  LOCAL_TIMEOUT_SIG,
  /** 402. Posted event used locally in several active objects */
  LOCAL_BIG_SEQUENCE_MODE_TIMER_SIG,
  /** 403. Posted event used locally in several active objects */
  LOCAL_TIMER_CHECK_TEN_INCR_SIG,
  /** 404. Posted event used locally in several active objects */
  LOCAL_TIMEOUT_PAUSE_SIG,
  /** 405. Posted event used locally in several active objects */
  LOCAL_TIMER_GLOBAL_BLINKING_SIG,
  /** 406. Posted event used locally in several active objects */
  LOCAL_TIMER_RF_SIG,
  /** 407. Posted event used locally in several active objects */
  LOCAL_TIMER_ENA_FAN_CONTROL_SIG,
  /** 408. Posted event used locally in several active objects */
  LOCAL_TIMER_CHARGE_CONTROL_SIG,
  /** 409. Posted event used locally in several active objects */
  LOCAL_TIMER_THERMO_STANDBYE_SIG,
  /** 410. Posted event used locally in several active objects */
  LOCAL_TIMER_POWER_OFF_SIG,
  /** STB */
  LOCAL_STB_TIMEOUT_SIG,
  LOCAL_TIMER_IS230V_SIG,

  /* 146 */

  /* used only in ATcmd */
  AT_REQUEST_SIG,

  /* used only in WlanModDrv */
  ENABLE_MODE_SAP_SIG,
  DISABLE_MODE_SAP_SIG,
  ENABLE_MODE_CLIENT_SIG,
  DISABLE_MODE_CLIENT_SIG,
  QUERY_CLIENTS_CONNECTED_SIG,
  START_SCANNING_SIG,
  START_MDNS_SIG,
  MIDDLEWARE_TIMER_SIG,
  SEQUENCE_DONE_SIG,
  SEQUENCE_FAILED_SIG,

  /* 157 */

  /** 407. The last signal. Needed by QEP Framework. */
  MAX_SIG
};

#ifdef Q_SPY
enum QsUserDebug {
  QS_USER_MALLOC = QS_USER,
  QS_USER_DEBUG_DISCOVERY_ALG,
  QS_USER_DEBUG_AT_CMD,
  QS_USER_DEBUG_AT_CMD_AT_DATA,
  QS_USER_DEBUG_AT_CMD_ERROR,
  QS_USER_DEBUG_AT_CMD_EVENTS,
  QS_USER_DEBUG_WLAN_MOD_DRV,
  QS_USER_DEBUG_MW_INTEGRATION,
  QS_USER_DEBUG_IGNITION,
  QS_USER_DEBUG_MW_OSAPI,
  QS_USER_THERMO,
  QS_USER_QUEUE_SIZES,
  QS_USER_ASSERT_INFO,
  QS_USER_PARAM,
  QS_USER_DEBUG_GAINSPAN_SPI,
  QS_USER_DEBUG_RANDOMGENERATOR,
  QS_USER_CHARGECONTROLLER,
  QS_USER_MODELING_LIGHT,
  QS_USER_BRONCONTROL_PRO,
  QS_USER_BRONCONTROL_PRO_GET_SET,
  QS_USER_BRONCONTROL_PRO_SEQ_INF,
  QS_USER_BRONCONTROL_PRO_CELL
};
#endif

typedef enum EnumSyncModeCell {
  SYNC_MODE_CELL_OFF = 0,
  SYNC_MODE_CELL_ON,
  SYNC_MODE_CELL_BLINK
} SyncModeCell;

enum ThermoAlarmType {
  THERMO_NONE = 0,
  THERMO_IGBT,
  THERMO_CONDENSATOR,
  THERMO_RESISTOR
};

enum AlarmType {
  ALARM_NONE = 0,
  ALARM_LAMP,      /* F1 */
  ALARM_DISCHARGE,
  ALARM_CHARGE,    /* F3 */
  ALARM_AFTERGLOW, /* F2 */
  ALARM_WRONG_SP,  /* F8 */
  ALARM_SYSSNIV    /* F9 */
};

typedef enum EnumSyncMode {
  SYNC_MODE_DISABLED = 0,
  SYNC_MODE_CE,
  SYNC_MODE_RF,
  SYNC_MODE_ALL
} SyncMode;

typedef enum EnumWIFIMode {
  WIFI_MODE_OFF = 0,
  WIFI_MODE_ON,
  WIFI_MODE_SYNCHRO
} WIFIMode;

typedef enum EnumModelingLightMode {
  MODELING_LIGHT_MODE_FULL = 0,
  MODELING_LIGHT_MODE_PROP
} ModelingLightMode;

typedef enum EnumRFMode {
  RF_MODE_NONE = 0,
  RF_MODE_RFS
} RFMode;

typedef enum EnumCognitionLightColor {
  NONE = 0,
  BLUE,
  GREEN,
  MAGENTA,
  YELLOW,
  CYAN,
  RED
} CognitionLightColor;

enum EnumWlanMode {
  MODE_NONE,
  MODE_CLIENT,
  MODE_SAP
};

typedef enum EnumMenueConfigurationPossibilities {
XXXX_XXXX_HS_XXXX_XXXX_SEQ_BEEP_CELL = 0,
XXXX_XXXX_HS_STUDIO_LAMP_SEQ_BEEP_ALL,
XXXX_WIFI_HS_XXXX_XXXX_SEQ_BEEP_CELL,
XXXX_WIFI_HS_STUDIO_LAMP_SEQ_BEEP_ALL,
SPEED_XXXX_HS_XXXX_XXXX_SEQ_BEEP_CELL,
SPEED_XXXX_HS_STUDIO_LAMP_SEQ_BEEP_ALL,
SPEED_WIFI_HS_XXXX_XXXX_SEQ_BEEP_CELL,
SPEED_WIFI_HS_STUDIO_LAMP_SEQ_BEEP_ALL
} MenueConfigurationPossibilities;


enum Menues
{
  MENU_DOT_SPEED = 0,
  MENU_DOT_WIFI,
  MENU_DOT_ECO_AND_HS,
  MENU_DOT_STUDIO,
  MENU_DOT_LAMP,
  MENU_DOT_SEQ,
  MENU_DOT_BEEP,
  MENU_DOT_SYNC,
  MENU_DOT_MAX
};

typedef enum _EnumWlanLoginEncType
{
  ENC_TYPE_WEP = 0,
  ENC_TYPE_WPA,
  ENC_TYPE_WPA2
} EnumWlanLoginEncType;

enum FreemaskAlternateType {
  DISABLE = 0,
  FREEMASK_ON,
  ALTERNATE_WITH_3_GROUPS,
  ALTERNATE_WITH_4_GROUPS
};

enum MaskgroupType {
  STANDBY_OFF = 0,
  MAIN,
  MASK1,
  MASK2,
  MASK3
};

enum SynchronizedSequenceMode {
  SS_OFF = 0,
  MASTER,
  SLAVE
};


extern bool bBlockPhysKeyUntilIdle;

#endif /* GLOBALS_H_ */
